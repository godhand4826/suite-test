// Code generated by mockery v2.43.2. DO NOT EDIT.

package user

import mock "github.com/stretchr/testify/mock"

// MockEmailSender is an autogenerated mock type for the EmailSender type
type MockEmailSender struct {
	mock.Mock
}

type MockEmailSender_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEmailSender) EXPECT() *MockEmailSender_Expecter {
	return &MockEmailSender_Expecter{mock: &_m.Mock}
}

// Send provides a mock function with given fields: email, content
func (_m *MockEmailSender) Send(email string, content string) error {
	ret := _m.Called(email, content)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(email, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockEmailSender_Send_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Send'
type MockEmailSender_Send_Call struct {
	*mock.Call
}

// Send is a helper method to define mock.On call
//   - email string
//   - content string
func (_e *MockEmailSender_Expecter) Send(email interface{}, content interface{}) *MockEmailSender_Send_Call {
	return &MockEmailSender_Send_Call{Call: _e.mock.On("Send", email, content)}
}

func (_c *MockEmailSender_Send_Call) Run(run func(email string, content string)) *MockEmailSender_Send_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockEmailSender_Send_Call) Return(_a0 error) *MockEmailSender_Send_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockEmailSender_Send_Call) RunAndReturn(run func(string, string) error) *MockEmailSender_Send_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockEmailSender creates a new instance of MockEmailSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEmailSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEmailSender {
	mock := &MockEmailSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
